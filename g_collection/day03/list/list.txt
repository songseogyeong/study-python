list
    여러 개의 저장공간이 나열되어 있는 것.
    * list는 실무에서 가장 많이 사용되는 자료구조이다.

변수는 관리하기가 어려움!
변수가 많을수록 위로 올라가서 확인
그래서 리스트로 한번만 선언

i = [1, 3, 5]

하나의 저장공간에 하나의 값밖에 못들어감!
RAM에 저장공간이 생기는데


사용목적
    1. 여러번 선언하지 않고 한 번만 선언하기 위해서 사용
    2. 규칙성이 없는 값에 규칙성을 부여하기 위해 사용

list 선언
    - 어떤 값을 넣을 지 알 때
        list명 = [값1, 값2, ...]

    - 어떤 값인지는 모르지만, 칸 수는 알 때
        list명 = [값] * 칸수
        [0] * 10 > 10칸짜리 만들어지는데 값은 0
        [값] > 초기값

    -어떤 값인지도 모르고 칸수도 모를 때
        list명 = []

    list명 = list(range(sart, end, step))
    range만 쓰면 rage라는 자료형이 되기 때문에
    앞에 list를 붙여서 리스트로 형변환함!

list 길이
    len(list명)

list 사용
    data_list = [1, 2, 3]

    - 값 넣기
    회원가입, 게시글 작성...
        (추가)
            list명.append(값)
            data_list.append(4)
            결과 : [1, 2, 3, 4]
            >성능이 떨어짐
            원래 있던 값의 뒤에 뭐가 있으면
            원래 있던 값을 복사한 뒤, 뒤에 새로운 값을 넣음
            그리고 원래 있던 값을 해제> 성능떨어짐

        (삽입)
            list명.insert(인덱스번호, 값)
            인덱스 번호란? 값이 있는 위치
            위치를 지정해서 넣으면 원래 있던 값은 오른쪽으로 밀림

            data_list.insert(1, 1.5)
            결과 : [1, 1.5, 2, 3, 4]

    - 값 삭제
    회원 삭제, 글 삭제....
        list명.remove(값)
            중복 시 먼저 나온 값(낮은 인덱스 값)이 삭제

        del(list명[인덱스])
        del list명[인덱스]
            인덱스로 삭제

        list명.clear()
            모든 값 삭제

    - 값 검색
        list명.index(값)
            값이 들어있는 저장공간의 인덱스 번호
            중복 시 먼저 나온 값의 인덱스 번호
            중복되는 숫자가 3개가 있다고 가정하면 이 명령문으로는 못 찾고 반복문을 돌려서 찾아야함

    - 값 수정
        list명[인덱스] = 새로운 값